version: '3.4'

services:

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    expose:
      - "5672"
    restart: on-failure

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - main
    expose:
      - "5432"
    restart: on-failure
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    command:
      - 'redis-server'
      - '--loglevel ${REDIS_LOGLEVEL:-warning}'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--maxmemory ${REDIS_MAXMEM:-50mb}'
      - '--maxmemory-policy ${REDIS_POLICY:-noeviction}'
    volumes:
      - redis:/data
    expose:
      - "6379"
    networks:
      - main
    restart: on-failure

  highcharts:
    container_name: highcharts
    hostname: highcharts
    image: "onsdigital/highcharts-export-node"
    networks:
      - main
    expose:
      - "8080"
    restart: on-failure

  service1:
    build: service1
    command: sh -c "./wait-for-it.sh postgres:5432 && python3 manage.py migrate && python3 inituser.py && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - service1-img:/code/www/media/img
    container_name: service1
    depends_on:
      - postgres
      - rabbitmq
      - redis
    ports:
      - "8000:8000"
    hostname: service1
    image: service1-image
    networks:
      - main
    restart: on-failure

  celery_worker:
    command: celery -A service1 worker -l info -c 3
    volumes:
      - service1-img:/code/www/media/img
    container_name: celery_worker
    depends_on:
      - postgres
      - rabbitmq
      - redis
    hostname: celery_worker
    image: service1-image
    networks:
      - main
    restart: on-failure

  service2:
    build: service2
    command: python3 app.py
    container_name: service2
    depends_on:
      - postgres
    expose:
      - "5001"
    hostname: service2
    image: service2-image
    networks:
      - main
    restart: on-failure

  service3:
    build: service3
    command: sh -c "python3 app.py"
    container_name: service3
    depends_on:
      - highcharts
    expose:
      - "5002"
    hostname: service3
    image: service3-image
    networks:
      - main
    restart: on-failure

networks:
  main:

volumes:
  postgresql-data:
  redis:
  service1-img:
